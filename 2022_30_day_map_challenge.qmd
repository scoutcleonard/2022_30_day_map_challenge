---
title: "30 Day Map Challenge"
subtitle: "November 2022" 
author: "Scout Leonard"
format: html
---

These maps were completed as part of the #30DayMapChallenge for 2022. Information about the challenge is available at [Topi Tjukanovt's GitHub repository where the challenge is set](https://github.com/tjukanovt/30DayMapChallenge). 

# Day 1: Points

_A map with points._

```{r 1_load_libraries}
#install librarian if it is not installed to your machine 
if (!require(librarian)) {
  install.packages("librarian")
  library(librarian)
}

shelf(lterdatasampler,
      here,
      tidyverse,
      leaflet,
      sf,
      lubridate)
```

```{r 1_download_data}
nwt_pikas <- nwt_pikas
```

```{r 1_spatial}
nwt_pikas_latlong <- nwt_pikas %>% 
  st_as_sf(coords = c("utm_easting", "utm_northing"), crs = 26913) %>% 
  st_transform(4326) %>% 
  st_coordinates() %>% 
  as.data.frame()

nwt_pikas <- cbind(nwt_pikas, nwt_pikas_latlong) %>% 
  rename("longitude" = X,
         "latitude" = Y) %>% 
  mutate(month = month(date,
                       label = TRUE))
```

```{r 1_map}
icons <- awesomeIcons(
  library = "fa",
  icon = 'fa-paw',
  iconColor = 'black')

map_1 <- leaflet(nwt_pikas) %>% 
  fitBounds(lng1 = min(nwt_pikas$longitude - 0.01),
            lat1 = min(nwt_pikas$latitude - 0.01),
            lng2 = max(nwt_pikas$longitude + 0.01),
            lat2 = max(nwt_pikas$latitude + 0.01)) %>% 
  addProviderTiles("OpenTopoMap") 

pikas.df <- split(nwt_pikas, nwt_pikas$month)

#labs
  labs <- paste0('<p>',
                 '<b>',
                 "Site: ",
                 '</b>',
                 ~site,
                 '<p></p>',
                 '<b>',
                 "Station: ",
                 '</b>',
                 ~station,
                 '<p></p>',
                 '<b>',
                 "Elevation: ",
                 '</b>',
                 ~elev_m,
                 '<p></p>',
                 '<b>',
                 "Concentration: ",
                 '</b>',
                 ~concentration_pg_g,
                 '<p>') %>% 
    htmltools::HTML()

names(pikas.df) %>%
  purrr::walk(function(df){
    map_1 <<- map_1 %>%
      addAwesomeMarkers(data = pikas.df[[df]],
                        lng = ~longitude,
                        lat = ~latitude,
                        label = ~labs,
                        group = df,
                        #popup = labs,
                        icon = icons,
                        clusterOptions = markerClusterOptions(removeOutsideVisibleBounds = F),
                        labelOptions = labelOptions(noHide = F,
                                                    direction = 'auto'))
  })

map_1 %>% 
  addLayersControl(
    overlayGroups = names(pikas.df),
    options = layersControlOptions(collapsed = TRUE)
  )
```

```{r 1_print_map}
map_1
```

# Day 2: Lines

_A map with lines._

I mapped the national highways of the state of California using data downloaded from the CalTrans website on November 4th, 2022 and a shapefile of the state of California downloaded from

```{r 2_load_libraries}
#install librarian if it is not installed to your machine 
if (!require(librarian)) {
  install.packages("librarian")
  library(librarian)
}

shelf(sf)
```

```{r 2_download_data}
#highways
cal_highways <- st_read(here("data/day_2/National_Highway_System/National_Highway_System.shp"))

#state
ca_boundary <- st_read(here("data/day_2/ca-state-boundary/CA_State_TIGER2016.shp"))
```

```{r 2_spatial}

```

```{r 2_map}
p_2 <- ggplot() +
  geom_sf(data = ca_boundary,
          size = 3,
          color = "black",
          fill = "cyan4") +
  coord_sf() +
  theme_minimal(base_family = "Roboto Condensed") +
  geom_sf(data = cal_highways,
          color = "floralwhite",
          size = 0.1) +
  labs(title = "California National Highways") +
  theme(axis.text = element_blank(),
        axis.line = element_blank())
```

```{r 2_print_map}
p_2
```

```{r 2_save_map}

```

# Day 3: Polygons

_A map with polygons._ 

```{r 3_load_libraries}
#install librarian if it is not installed to your machine 
if (!require(librarian)) {
  install.packages("librarian")
  library(librarian)
}

shelf(tmap, 
      spData)
```

```{r 3_download_data}

```

```{r}
south_america <- world %>% 
  filter(continent == "South America")

p_3 <- tm_shape(south_america, na.rm = TRUE) + 
  tm_fill(col = "lifeExp", title = "Life Expectancy") + 
  tm_text("name_long", size = "AREA") +
  tm_borders() +
  tm_compass(type = "8star",
             position = c("right","bottom"),
             size = 2) +
  tm_scale_bar(breaks = c(0, 250, 500),
               text.size = 7,
               position = c("center", "bottom")) +
  tm_layout(bg.color = "lightblue") +
  tm_text("urban_agglomeration", size = 0.3, just = "left") +
  tm_layout("Life Expectancy in South America",
            legend.title.size = 0.5,
            legend.text.size = 0.3,
            title.size = 2,
            frame = FALSE, 
            legend.frame = TRUE,
            legend.bg.color = "white",
            legend.frame.lwd = 2,
            legend.position = c("right", "center"))
```

# Day 4: Color Friday: Green 

_A map containing the color green._ 

```{r 4_load_libraries}
#install librarian if it is not installed to your machine 
if (!require(librarian)) {
  install.packages("librarian")
  library(librarian)
}

#shelf()
```


# Day 5: Ukraine

_A map of Ukraine._


